/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ActivityUpdateManyWithoutUsersInput } from "./ActivityUpdateManyWithoutUsersInput";

import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsBoolean,
  IsDate,
  IsInt,
  Max,
} from "class-validator";

import { Type } from "class-transformer";
import { DictionaryEntryUpdateManyWithoutUsersInput } from "./DictionaryEntryUpdateManyWithoutUsersInput";
import { AuditLogUpdateManyWithoutUsersInput } from "./AuditLogUpdateManyWithoutUsersInput";
import { CommentUpdateManyWithoutUsersInput } from "./CommentUpdateManyWithoutUsersInput";
import { DefinitionUpdateManyWithoutUsersInput } from "./DefinitionUpdateManyWithoutUsersInput";
import { ExampleUpdateManyWithoutUsersInput } from "./ExampleUpdateManyWithoutUsersInput";
import { RootUpdateManyWithoutUsersInput } from "./RootUpdateManyWithoutUsersInput";
import { AiSuggestionUpdateManyWithoutUsersInput } from "./AiSuggestionUpdateManyWithoutUsersInput";
import { SubmissionUpdateManyWithoutUsersInput } from "./SubmissionUpdateManyWithoutUsersInput";
import { DocumentUpdateManyWithoutUsersInput } from "./DocumentUpdateManyWithoutUsersInput";
import { UserBadgeUpdateManyWithoutUsersInput } from "./UserBadgeUpdateManyWithoutUsersInput";
import { UserRoleUpdateManyWithoutUsersInput } from "./UserRoleUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => ActivityUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ActivityUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ActivityUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  activities?: ActivityUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DictionaryEntryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DictionaryEntryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DictionaryEntryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  approvedEntries?: DictionaryEntryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => AuditLogUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AuditLogUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AuditLogUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  auditLogs?: AuditLogUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => CommentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => CommentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => CommentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  comments?: CommentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DefinitionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DefinitionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DefinitionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  createdDefinitions?: DefinitionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DictionaryEntryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DictionaryEntryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DictionaryEntryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  createdEntries?: DictionaryEntryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => ExampleUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => ExampleUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => ExampleUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  createdExamples?: ExampleUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => RootUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => RootUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => RootUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  createdRoots?: RootUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DictionaryEntryUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DictionaryEntryUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DictionaryEntryUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  editedEntries?: DictionaryEntryUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  fullName?: string | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  languageProficiency?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  lastLogin?: Date | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  level?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  passwordHash?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  points?: number;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  profileImage?: string | null;

  @ApiProperty({
    required: false,
    type: () => AiSuggestionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AiSuggestionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AiSuggestionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  reviewedSuggestions?: AiSuggestionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => SubmissionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SubmissionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SubmissionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  reviews?: SubmissionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => SubmissionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => SubmissionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => SubmissionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  submissions?: SubmissionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => DocumentUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => DocumentUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => DocumentUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  uploadedDocuments?: DocumentUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserBadgeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserBadgeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserBadgeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userBadges?: UserBadgeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => UserRoleUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => UserRoleUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => UserRoleUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  userRoles?: UserRoleUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;
}

export { UserUpdateInput as UserUpdateInput };
