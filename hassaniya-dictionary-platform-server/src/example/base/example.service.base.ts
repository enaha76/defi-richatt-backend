/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  Example as PrismaExample,
  User as PrismaUser,
  DictionaryEntry as PrismaDictionaryEntry,
} from "@prisma/client";

export class ExampleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ExampleCountArgs, "select">): Promise<number> {
    return this.prisma.example.count(args);
  }

  async examples(args: Prisma.ExampleFindManyArgs): Promise<PrismaExample[]> {
    return this.prisma.example.findMany(args);
  }
  async example(
    args: Prisma.ExampleFindUniqueArgs
  ): Promise<PrismaExample | null> {
    return this.prisma.example.findUnique(args);
  }
  async createExample(args: Prisma.ExampleCreateArgs): Promise<PrismaExample> {
    return this.prisma.example.create(args);
  }
  async updateExample(args: Prisma.ExampleUpdateArgs): Promise<PrismaExample> {
    return this.prisma.example.update(args);
  }
  async deleteExample(args: Prisma.ExampleDeleteArgs): Promise<PrismaExample> {
    return this.prisma.example.delete(args);
  }

  async getCreator(parentId: number): Promise<PrismaUser | null> {
    return this.prisma.example
      .findUnique({
        where: { id: parentId },
      })
      .creator();
  }

  async getEntry(parentId: number): Promise<PrismaDictionaryEntry | null> {
    return this.prisma.example
      .findUnique({
        where: { id: parentId },
      })
      .entry();
  }
}
