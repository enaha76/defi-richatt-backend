/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  ExtractedWord as PrismaExtractedWord,
  Document as PrismaDocument,
  DictionaryEntry as PrismaDictionaryEntry,
} from "@prisma/client";

export class ExtractedWordServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ExtractedWordCountArgs, "select">
  ): Promise<number> {
    return this.prisma.extractedWord.count(args);
  }

  async extractedWords(
    args: Prisma.ExtractedWordFindManyArgs
  ): Promise<PrismaExtractedWord[]> {
    return this.prisma.extractedWord.findMany(args);
  }
  async extractedWord(
    args: Prisma.ExtractedWordFindUniqueArgs
  ): Promise<PrismaExtractedWord | null> {
    return this.prisma.extractedWord.findUnique(args);
  }
  async createExtractedWord(
    args: Prisma.ExtractedWordCreateArgs
  ): Promise<PrismaExtractedWord> {
    return this.prisma.extractedWord.create(args);
  }
  async updateExtractedWord(
    args: Prisma.ExtractedWordUpdateArgs
  ): Promise<PrismaExtractedWord> {
    return this.prisma.extractedWord.update(args);
  }
  async deleteExtractedWord(
    args: Prisma.ExtractedWordDeleteArgs
  ): Promise<PrismaExtractedWord> {
    return this.prisma.extractedWord.delete(args);
  }

  async getDocument(parentId: number): Promise<PrismaDocument | null> {
    return this.prisma.extractedWord
      .findUnique({
        where: { id: parentId },
      })
      .document();
  }

  async getEntry(parentId: number): Promise<PrismaDictionaryEntry | null> {
    return this.prisma.extractedWord
      .findUnique({
        where: { id: parentId },
      })
      .entry();
  }
}
