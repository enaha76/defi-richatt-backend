/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ActivityCreateNestedManyWithoutDictionaryEntriesInput } from "./ActivityCreateNestedManyWithoutDictionaryEntriesInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsBoolean,
} from "class-validator";
import { Type } from "class-transformer";
import { AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput } from "./AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { CommentCreateNestedManyWithoutDictionaryEntriesInput } from "./CommentCreateNestedManyWithoutDictionaryEntriesInput";
import { DefinitionCreateNestedManyWithoutDictionaryEntriesInput } from "./DefinitionCreateNestedManyWithoutDictionaryEntriesInput";
import { ExampleCreateNestedManyWithoutDictionaryEntriesInput } from "./ExampleCreateNestedManyWithoutDictionaryEntriesInput";
import { ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput } from "./ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput";
import { RootWhereUniqueInput } from "../../root/base/RootWhereUniqueInput";
import { SubmissionCreateNestedManyWithoutDictionaryEntriesInput } from "./SubmissionCreateNestedManyWithoutDictionaryEntriesInput";

@InputType()
class DictionaryEntryCreateInput {
  @ApiProperty({
    required: false,
    type: () => ActivityCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => ActivityCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => ActivityCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  activities?: ActivityCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
    type: () => AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  aiSuggestions?: AiSuggestionCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  approvalDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  approvalUser?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  audioFilePath?: string | null;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  creator?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => DefinitionCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => DefinitionCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => DefinitionCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  definitions?: DefinitionCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
    type: () => ExampleCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => ExampleCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => ExampleCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  examples?: ExampleCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
    type: () => ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  extractedWords?: ExtractedWordCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: true,
    type: Boolean,
  })
  @IsBoolean()
  @Field(() => Boolean)
  isChallengeWord!: boolean;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  lastEditor?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  originType?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  partOfSpeech?: string | null;

  @ApiProperty({
    required: false,
    type: () => RootWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => RootWhereUniqueInput)
  @IsOptional()
  @Field(() => RootWhereUniqueInput, {
    nullable: true,
  })
  root?: RootWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  status!: string;

  @ApiProperty({
    required: false,
    type: () => SubmissionCreateNestedManyWithoutDictionaryEntriesInput,
  })
  @ValidateNested()
  @Type(() => SubmissionCreateNestedManyWithoutDictionaryEntriesInput)
  @IsOptional()
  @Field(() => SubmissionCreateNestedManyWithoutDictionaryEntriesInput, {
    nullable: true,
  })
  submissions?: SubmissionCreateNestedManyWithoutDictionaryEntriesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  transliteration?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  verbForm?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  word!: string;
}

export { DictionaryEntryCreateInput as DictionaryEntryCreateInput };
